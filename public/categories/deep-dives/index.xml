<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deep Dives on ~/mattjmcnaughton/blog</title>
    <link>https://mattjmcnaughton.com/categories/deep-dives/</link>
    <description>Recent content in Deep Dives on ~/mattjmcnaughton/blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Dec 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://mattjmcnaughton.com/categories/deep-dives/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Concurrent Futures in Sheepdoge: How a few lines of code resulted in a 78% performance improvement</title>
      <link>https://mattjmcnaughton.com/post/concurrent-futures-in-sheepdoge/</link>
      <pubDate>Fri, 29 Dec 2017 00:00:00 +0000</pubDate>
      
      <guid>https://mattjmcnaughton.com/post/concurrent-futures-in-sheepdoge/</guid>
      <description>For the past couple of months, I&amp;rsquo;ve been working on Sheepdoge, a tool for managing your personal Unix machines with Ansible. It&amp;rsquo;s like boxen, but for Ansible.
One new sheepdoge feature I&amp;rsquo;m particularly excited about is the use of concurrent.futures during sheepdoge install. concurrent.futures provides a high-level API for executing code asynchronously, making adding thread/process based concurrency trivial. It is a standard library python module as of 3.2, and is available on python 2.</description>
    </item>
    
    <item>
      <title>Predictive Auto-scaling in Kubernetes - Thesis</title>
      <link>https://mattjmcnaughton.com/post/predictive-auto-scaling-in-kubernetes-thesis/</link>
      <pubDate>Sat, 28 May 2016 00:00:00 +0000</pubDate>
      
      <guid>https://mattjmcnaughton.com/post/predictive-auto-scaling-in-kubernetes-thesis/</guid>
      <description>Over the course of my final year at Williams College, I spent a lot of time working on a distributed systems thesis with Professor Jeannie Albrecht. My thesis is entitled &amp;ldquo;Predictive Pod Auto-scaling in the Kubernetes Container Cluster Manager&amp;rdquo;, and it is entirely open-source. The written portion, presentation slides, and evaluation code can be found on my Github. Additionally, our contributions to Google&amp;rsquo;s open-source cluster container manager Kubernetes can be found on my fork.</description>
    </item>
    
  </channel>
</rss>